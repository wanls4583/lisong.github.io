---
author: wanls4583
comments: true
date: 2018-03-25 15:08:20+00:00
layout: post
title: 字符串和编码
wordpress_id: 507
categories:
- 廖雪峰python教程学习笔记

tags:
- 廖雪峰python教程学习笔记

---

Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了。Unicode标准在不断发展，但最常用的是用两个字节表示一个字符（如果要用到非常偏僻的字符，就需要4个字节）。

本着节约的精神，又出现了把Unicode编码转化为“可变长编码”的UTF-8编码。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。如果你要传输的文本包含大量英文字符，用UTF-8编码就能节省空间。

UTF-8编码有一个额外的好处，就是ASCII编码实际上可以被看成是UTF-8编码的一部分，所以，大量只支持ASCII编码的历史遗留软件可以在UTF-8编码下继续工作。

在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。

用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件。

浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器

ord()函数获取字符的整数表示，chr()函数把编码转换为对应的字符:

```python
>>> ord('A')
65
>>> ord('中')
20013
>>> chr(66)
'B'
>>> chr(25991)
'文'
```

bytes类型的数据用带b前缀的单引号或双引号表示，byte里只能是asill码:
```python
x = b'ABC'
>>> b'中文'
  File "", line 1
SyntaxError: bytes can only contain ASCII literal characters.
>>> b'\xd6\xd0'
b'\xd6\xd0'
```

以Unicode表示的str通过encode()方法可以编码为指定的bytes，相应的有decode方法:
```python
>>> 'ABC'.encode('ascii')
b'ABC'
>>> '中文'.encode('utf-8')
b'\xe4\xb8\xad\xe6\x96\x87'
>>> '中文'.encode('ascii')
Traceback (most recent call last):
  File "", line 1, in 
UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128)
>>> b'\xd6\xd0'.decode('gb2312')
'中'
```

len()用来计算字符串所占的字节数
```python
>>> len(b'ABC')
3
>>> len('中文'.encode('utf-8'))
6
```

当Python解释器读取源代码时，为了让它按UTF-8编码读取(保存的源码应该是也UTF-8)，我们通常在文件开头写上这句：
```python
# -*- coding: utf-8 -*-
```

格式化
```python
>>> 'Hello, %s' % 'world'
'Hello, world'
>>> 'Hi, %s, you have $%d.' % ('Michael', 1000000)
'Hi, Michael, you have $1000000.'
```
或者
```python
>>> 'Hello, {0}, 成绩提升了 {1:.1f}%'.format('小明', 17.125)
'Hello, 小明, 成绩提升了 17.1%'
```
%d	整数
%f	浮点数
%s	字符串
%x	十六进制整数
